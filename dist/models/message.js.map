{"version":3,"sources":["../../src/models/message.js"],"names":["Message","app","messages","OrderedMap","obj","Promise","resolve","reject","idd","_","get","id","toString","userId","ObjectId","channelId","message","_id","body","created","Date","console","log","db","collection","insertOne","err","info","models","user","load","then","unset","catch"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;;;IACqBA,O;AAEjB,qBAAYC,GAAZ,EAAgB;AAAA;;AACZ,aAAKA,GAAL,GAAWA,GAAX;AACA,aAAKC,QAAL,GAAgB,IAAIC,qBAAJ,EAAhB;AACH;;;;+BAEMC,G,EAAI;AAAA;;AAEP,mBAAO,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAErC,oBAAIC,MAAMC,iBAAEC,GAAF,CAAMN,GAAN,EAAW,KAAX,CAAV;AACA,oBAAMO,KAAKF,iBAAEG,QAAF,CAAWJ,GAAX,CAAX;;AAEA,oBAAMK,SAAS,IAAIC,iBAAJ,CAAaL,iBAAEC,GAAF,CAAMN,GAAN,EAAW,QAAX,CAAb,CAAf;AACA,oBAAMW,YAAY,IAAID,iBAAJ,CAAaL,iBAAEC,GAAF,CAAMN,GAAN,EAAU,WAAV,CAAb,CAAlB;;AAGA,oBAAMY,UAAU;AACZC,yBAAK,IAAIH,iBAAJ,CAAaH,EAAb,CADO;AAEZO,0BAAMT,iBAAEC,GAAF,CAAMN,GAAN,EAAU,MAAV,EAAiB,EAAjB,CAFM;AAGZS,4BAAQA,MAHI;AAIZE,+BAAWA,SAJC;AAKZI,6BAAS,IAAIC,IAAJ;AALG,iBAAhB;AAOAC,wBAAQC,GAAR,CAAY,cAAZ,EAA2BN,OAA3B;;AAGA,sBAAKf,GAAL,CAASsB,EAAT,CAAYA,EAAZ,CAAe,kBAAf,EAAmCC,UAAnC,CAA8C,UAA9C,EAA0DC,SAA1D,CAAoET,OAApE,EAA6E,UAACU,GAAD,EAAMC,IAAN,EAAe;;AAExF,wBAAGD,GAAH,EAAO;AACH,+BAAOnB,OAAOmB,GAAP,CAAP;AACH;;AAEG,0BAAKzB,GAAL,CAAS2B,MAAT,CAAgBC,IAAhB,CAAqBC,IAArB,CAA0BrB,iBAAEG,QAAF,CAAWC,MAAX,CAA1B,EAA8CkB,IAA9C,CAAmD,UAACF,IAAD,EAAS;AACxDpB,yCAAEuB,KAAF,CAAQH,IAAR,EAAc,UAAd;AACApB,yCAAEuB,KAAF,CAAQH,IAAR,EAAc,OAAd;;AAEAb,gCAAQa,IAAR,GAAeA,IAAf;;AAEA,+BAAOvB,QAAQU,OAAR,CAAP;AACH,qBAPD,EAOGiB,KAPH,CAOS,UAACP,GAAD,EAAS;AACd,+BAAOnB,OAAOmB,GAAP,CAAP;AACH,qBATD;;AAWR;AACA;AACH,iBAnBG;AAqBH,aAxCM,CAAP;AA0CH;;;;;;kBAnDgB1B,O","file":"message.js","sourcesContent":["import _ from 'lodash'\nimport {OrderedMap} from 'immutable' \nimport {ObjectId} from 'mongodb'\nexport default class Message{\n\n    constructor(app){\n        this.app = app;\n        this.messages = new OrderedMap();\n    }\n\n    create(obj){\n\n        return new Promise( (resolve, reject) => {\n\n            let idd = _.get(obj, '_id');\n            const id = _.toString(idd);\n            \n            const userId = new ObjectId(_.get(obj, 'userId'));\n            const channelId = new ObjectId(_.get(obj,'channelId'));\n            \n            \n            const message = {\n                _id: new ObjectId(id),\n                body: _.get(obj,'body',''),\n                userId: userId,\n                channelId: channelId,\n                created: new Date(),\n             };\n            console.log(\"iddddd--msg:\",message);\n            \n            \n            this.app.db.db(\"mongodbmessenger\").collection('messages').insertOne(message, (err, info) => {\n\n                if(err){\n                    return reject(err);\n                }\n                \n                    this.app.models.user.load(_.toString(userId)).then((user) =>{\n                        _.unset(user, 'password');\n                        _.unset(user, 'email');\n\n                        message.user = user;\n\n                        return resolve(message);\n                    }).catch((err) => {\n                        return reject(err);\n                    });\n                \n            // console.log(\"I am hereeeeeeeeeeeeeeeeeee\");\n            // return err ? reject(err) : resolve(message);\n        });    \n\n        });\n\n    }\n\n}"]}